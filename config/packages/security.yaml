security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        fos_userbundle:
            id: fos_user.user_provider.username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            provider: fos_userbundle
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                default_target_path: /admin/dashboard
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
            anonymous: lazy
            provider: users_in_memory


    role_hierarchy:
        ROLE_USER:      [ROLE_SONATA_ADMIN, ROLE_SONATA_USER_ADMIN_USER_VIEW, ROLE_APP_ADMIN_ORDER_LIST, ROLE_APP_ADMIN_ORDER_VIEW, ROLE_APP_ADMIN_ORDER_CREATE, ROLE_APP_ADMIN_ORDER_EDIT]
        ROLE_EMPLOYEE:  [ROLE_SONATA_ADMIN, ROLE_USER, ROLE_APP_ADMIN_ORDER_DELETE, ROLE_SONATA_USER_ADMIN_USER_LIST, ROLE_SONATA_USER_ADMIN_USER_VIEW, ROLE_SONATA_USER_ADMIN_USER_CREATE, ROLE_SONATA_USER_ADMIN_USER_EDIT, ROLE_SONATA_USER_ADMIN_USER_DELETE]
        ROLE_ADMIN:     [ROLE_USER, ROLE_EMPLOYEE, ROLE_ALLOWED_TO_SWITCH]
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/admin/, role: [ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/,       roles: IS_AUTHENTICATED_FULLY }

acl:
    connection: default